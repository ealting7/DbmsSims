@model DbmsSims.Models.ICMS2.ViewModels.UtilizationInpatientDayViewModel


@Html.Partial("~/Views/MemberProfile/_ReferralNav.cshtml", 
              new DbmsSims.Models.ICMS2.ViewModels.ReferralViewModel { ReferralNumber = Model.ReferralNumber, AuthNumber = Model.AuthNumber })


@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "frmUtils" }))
 {

    <div class="top-bottom-margins">

        <div class="container">

            @* ROW START *@
            <div class="row">

                @* admit date *@
                <div class="col-md-3">

                    <div class="form-group">

                        <div class="col-md-10">
                            <label>Admit Date</label>
                        </div>


                        <div class="col-md-10 focus">
                            @Html.TextBoxFor(m => m.AuthStartDate, "{0:MM/dd/yyyy}", new { id="txtauthstart"})
                        </div>

                    </div>


                </div>


                @* discharge date*@
                <div class="col-md-3">

                    <div class="form-group">

                        <div class="col-md-10">
                            <label>Discharge Date</label>
                        </div>

                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.AuthEndDate, "{0:MM/dd/yyyy}", new { id = "txtauthend" })
                        </div>

                    </div>

                </div>


                @* save dates button*@
                <div class="col-md-3">

                    <div class="form-group">

                        <div class="col-md-10">
                            &nbsp;
                        </div>

                        <div class="col-md-10">
                            <input type="button" id="btnSaveDates" value="Save Dates" class="btn btn-primary" />
                        </div>

                    </div>

                </div>


                @* auth number*@
                <div class="col-md-3">

                    <div class="form-group">

                        <div class="col-md-10" id="authnumdisp">
                            @{
                                if (string.IsNullOrEmpty(Model.AuthNumber))
                                {
                                    @Html.ActionLink("Generate Auth Number", "GenerateNewAuthNumber", "MemberProfile", new { RefNum = Model.ReferralNumber }, new { @id = "genau" });
                                    <label id="lblauthnum" class="hidden">Auth Number</label>
                                }
                                else
                                {
                                    @Html.ActionLink("Generate Auth Number", "GenerateNewAuthNumber", "MemberProfile", new { RefNum = Model.ReferralNumber }, new { @id = "genau", @class = "hidden" });
                                    <label id="lblauthnum">Auth Number</label>
                                }
                            }
                            
                        </div>

                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.AuthNumber, new { @id = "authnum" })
                        </div>

                    </div>

                </div>    

            </div>


            <div class="row border-top-divider-1px">
                <h4>Inpatient Utilization:</h4>
            </div>
            

            @* ROW START *@
            <div class="row">

                @* bed types *@
                <div class="col-md-3">

                    <div class="form-group">

                        <div class="col-md-10">
                            <label>Bed Type</label>
                        </div>


                        <div class="col-md-10">
                            @Html.DropDownListFor(m => m.bed_type_id, new SelectList(Model.ReferralBedTypesInDbms, "id", "label"), "- Please Select -")
                        </div>

                    </div>

                </div>

                @* surgery *@
                <div class="col-md-3">

                    <div class="form-group">

                        <div class="col-md-10">
                            <label>SX</label>
                        </div>


                        <div class="col-md-10">
                            @Html.CheckBoxFor(m => m.surgery_flag)
                        </div>

                    </div>

                </div>

                @* surgery on first day *@
                <div class="col-md-3">

                    <div class="form-group">

                        <div class="col-md-10">
                            <label>SX Day1</label>
                        </div>


                        <div class="col-md-10">
                            @Html.CheckBoxFor(m => m.surgery_on_first_day_flag)
                        </div>

                    </div>

                </div>

                @* empty/blank column *@
                <div class="col-md-3">

                    <div class="form-group">

                            <div class="col-md-10">
                                &nbsp;
                            </div>

                        <div class="col-md-10">
                            &nbsp;
                        </div>

                    </div>

                </div>
                
            </div>


            @* ROW START *@
            <div class="row">

                @* start date *@
                <div class="col-md-3">

                    <div class="form-group">

                        <div class="col-md-10">
                            <label>Start Date</label>
                        </div>

                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.start_date, "{0:MM/dd/yyyy}", new { id = "txtstartdate" })
                            @Html.ValidationMessageFor(m => m.start_date, "", new { @class = "help-block" })
                        </div>

                    </div>

                </div>

                @* next review date *@
                <div class="col-md-3">

                    <div class="form-group">

                        <div class="col-md-10">
                            <label>Next Review Date</label>
                        </div>

                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.next_review_date, "{0:MM/dd/yyyy}", new { id = "txtnextreviewdate" })
                            @Html.ValidationMessageFor(m => m.next_review_date, "", new { @class = "help-block" })
                        </div>

                    </div>

                </div>

                @* number of days *@
                <div class="col-md-3">

                    <div class="form-group">

                        <div class="col-md-10">
                            <label>Number of Days</label>
                        </div>

                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.number_of_days, new { @readonly = "readonly", id = "txtnumberofdays" })
                        </div>

                    </div>

                </div>

                @* empty/blank column *@
                <div class="col-md-3">

                    <div class="form-group">

                        <div class="col-md-10">
                            &nbsp;
                        </div>

                        <div class="col-md-10">
                            &nbsp;
                        </div>

                    </div>

                </div>

            </div>


            @* ROW START *@
            <div class="row">

                @* decision by *@
                <div class="col-md-3">

                    <div class="form-group">

                        <div class="col-md-10">
                            <label>Decision By</label>
                        </div>

                        <div class="col-md-10">
                            @Html.DropDownListFor(m => m.review_type_items_id, new SelectList(Model.ReviewTypeItemsInDbms, "review_type_items_id", "name"), "- Please Select -")
                        </div>

                    </div>

                </div>

                @* decision *@
                <div class="col-md-3">

                    <div class="form-group">

                        <div class="col-md-10">
                            <label>Decision</label>
                        </div>

                        <div class="col-md-10">
                            @Html.DropDownListFor(m => m.util_decision_id,
                                                  new SelectList(Model.UtilizationDaysDecisionInDbms, "util_decision_id", "label"),
                                                  "- Please Select -",
                                                  new { @id = "decision", onchange = "EnableDenialReason()" })
                        </div>

                    </div>

                </div>

                @* denial reason *@
                <div class="col-md-3">

                    <div class="form-group">

                        <div class="col-md-10">
                            <label>Denial Reason</label>
                        </div>

                        <div class="col-md-10">
                            @Html.DropDownListFor(m => m.denial_reason_id, 
                                                 new SelectList(Model.DenialReasonsInDbms, "id", "label"),
                                                 "- Please Select -",
                                                 new { @id = "denialreason", disabled = true })
                        </div>

                    </div>

                </div>

                @* add button *@
                <div class="col-md-3">

                    <div class="form-group">

                        <div class="col-md-10">
                            &nbsp;
                        </div>

                        <div class="col-md-10">
                            <input type="button" id="btnAddUtilization" value="Add Utilization" class="btn btn-primary" />
                        </div>

                    </div>

                </div>

            </div>



            <div class="row border-top-divider-1px">
                <h4>Existing Inpatient Utilization(s):</h4>
            </div>

            @* ROW START *@
            <div class="row">

                @* existing inpatient utilizations *@
                <div class="col-md-12">

                    <div class="form-group">

                        @{

                            if (Model.InpatientUtilizationDaysInReferral.Count.CompareTo(0) > 0)
                            {

                                <table class="table"  id="tblExistingInpatientUtilizations">
                                    <thead>
                                        <tr>
                                            <th>#</th>
                                            <th>Seq</th>
                                            <th>Bed Typ</th>
                                            <th>SX</th>
                                            <th>SX Day1</th>
                                            <th>Start Date</th>
                                            <th>Next Review Date</th>
                                            <th>Decision By</th>
                                            <th>Decision</th>
                                            <th>Denial Reason</th>
                                        </tr>
                                    </thead>

                                    @foreach (var refutils in Model.InpatientUtilizationDaysInReferral)
                                    {
                                        <tbody>
                                            <tr>
                                                <th scope="row">
                                                    @Html.ActionLink("Remove",
                                                                     "RemoveInpatientUtilizationFromReferral",
                                                                     "MemberProfile",
                                                                     new { UtilType = refutils.UtilizationType,
                                                                           LineNum = refutils.LineNumber,
                                                                           RefNum = Model.ReferralNumber }, 
                                                                     null)
                                                </th>

                                                <td> @refutils.LineNumber </td>
                                                <td> @refutils.BedType </td>
                                                <td> @refutils.SurgeryText </td>
                                                <td> @refutils.SurgeryOnFirstDayText </td>

                                                @if (refutils.StartDate != null)
                                                {
                                                    <td> @refutils.StartDate.Value.ToShortDateString() </td>
                                                }
                                                else
                                                {
                                                    <td>N/A</td>
                                                }

                                                @if (refutils.NextReviewDate != null)
                                                {
                                                    <td> @refutils.NextReviewDate.Value.ToShortDateString() </td>
                                                }
                                                else
                                                {
                                                    <td>N/A</td>
                                                }

                                                <td> @refutils.DecisionBy </td>
                                                <td> @refutils.Decision </td>
                                                <td> @refutils.DenialReason </td>

                                            </tr>

                                        </tbody>

                                    }

                                </table>

                            }
                            else
                            {
                                <div>No Inpatient Utilizations Attached To Referral</div>
                            }

                        }

                    </div>

                </div>

            </div>


        </div>



        @Html.HiddenFor(m => m.ReferralNumber, new { @id = "hdeRefNum" })
        @Html.HiddenFor(m => m.MemberId, new { @id = "hdeMemId" })
        @Html.HiddenFor(m => m.InpatientOutpatientType, new { @id = "hdeUtilTyp" })

    </div>

}


<script type="text/javascript">

    //called with the Add Utilization button is clicked
    $(document).on("click", '#btnAddUtilization', function (e) {

        var myData = $('#frmUtils').serialize();
        var refnum = $("#hdeRefNum").val();

        $.ajax({
            url: '/MemberProfile/AddInpatientUtilization',
            data: myData,
            success: function (data) {
                location.reload()
            },
            statusCode: {
                404: function (content) { alert('cannot find resource'); },
                500: function (content) { alert('internal server error'); }
            },
            error: function (req, status, errorObj) {
                // handle status === "timeout"
                // handle other errors
            }
        });

    })


    //called when the Save Dates button is clicked
    $(document).on("click", '#btnSaveDates', function (e) {

        var myData = $('#frmUtils').serialize();

        $.ajax({
            url: '/MemberProfile/SaveInpatientReferralAuthDates',
            data: myData,
            success: function (data) {

                alert("Auth Dates Updated");

            },
            statusCode: {
                404: function (content) { alert('cannot find resource'); },
                500: function (content) { alert('internal server error'); }
            },
            error: function (req, status, errorObj) {
                // handle status === "timeout"
                // handle other errors
            }
        });

    })


    $(function () {

        $("#genau").click(function () {

            $.post(this.href, function (json) {

                $.each($.parseJSON(json), function (i, authnums) {

                    if (authnums.AuthNumber != "") {

                        $("#authnum").val(authnums.AuthNumber);

                        $("#genau").addClass("hidden");
                        $("#lblauthnum").removeClass("hidden");
                    }

                });

            });

            return false;

        });

    });



    function EnableDenialReason() {
        //denialreason
        var denialId = $("#decision").val();

        if (denialId == "2") {
            $("#denialreason").prop("disabled", false);
            $('#denialreason').focus();
        }
        else {
            $('#denialreason').val("");
            $("#denialreason").prop("disabled", true);
        }


    }

    function CalculateNumberOfDays() {

        //reset the number of days textbox
        $("#txtnumberofdays").val("");


        var strStartDate = $("#txtstartdate").val();

        //make sure there is a value in the start date textbox
        if (strStartDate.length != 0) {

            //verify start date is an actual date
            var dteStartDate = new Date(strStartDate);

            if (dteStartDate != 'Invalid Date') {

                //make sure there is a value in the next review date textbox
                var strNextReviewDate = $("#txtnextreviewdate").val();

                if (strNextReviewDate.length != 0) {

                    //verify next review date is an actual date
                    var dteNextReviewDate = new Date(strNextReviewDate);

                    if (dteNextReviewDate != 'Invalid Date') {

                        if (dteNextReviewDate > dteStartDate) {

                            var dteDifference = (dteNextReviewDate - dteStartDate);

                            if (dteDifference.toString().length != 0) {

                                var dteToDisplay = Math.round(dteDifference / 1000 / 60 / 60 / 24);

                                $("#txtnumberofdays").val(dteToDisplay.toString());
                            }

                        }

                    }

                }

            }

        }
    }


    //calculate number of days
    $("#txtstartdate").blur(function () {
        CalculateNumberOfDays();
    });

    $("#txtnextreviewdate").blur(function () {
        CalculateNumberOfDays();
    });

</script>